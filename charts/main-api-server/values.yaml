# Default values for main-api-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  storageClass: default-storage

replicaCount: 1

image:
  repository: ghcr.io/margarita-serve/main-api-server 
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 2
    memory: 1Gi
  requests:
    cpu: 1 
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

mariadb:
  auth:
    rootPassword: "root-koreserve"
    username: "gorm"
    password: "gorm"
    database: "koreserve"
  primary:
    persistence:
      accessModes: ["ReadWriteOnce"]
      size: 8Gi

# Rest-API Server Hostname
hostname: ""

# Database
db:
  logMode: true # shoud be "false" on production

# MicroService & ThirdParty Services
global:
 minioEndpoint: ""
 minioAccessKeyID: ""
 minioSecretAccessKey: ""
 kafkaBrokerEndpoint: ""

minio:
 useSSL: "false"
driftServer:
  endpoint: ""
accuracyServer:
  endpoint: ""
serviceHealthServer:
  endpoint: ""
graphServer:
  endpoint: ""
kafka:
  groupID: "monitor-group"
  autoOffsetReset: "latest"
inferenceSvc:
  kserveAPISvrEndPoint: ""
  kserveHostName: ""
  kserveIngressEndPoint: ""
  inferenceNamespace: ""

# IAM
IAM:
  defaultAdmin:
    username: "admin"
    password: "admin"
    nickName: "super admin"
    email: "admin@example.com"
    authorityID: "group:admin"
  defaultUser:
    username: "user"
    password: "user"
    nickName: "default user"
    email: "user@example.com"
    authorityID: "group:default"
  registration:
    activationURL: "http://%s/api/v1/auths/registration/activate"
    defaultAuthorityID: "group:default"
  JWT:
    issuer: "KORESERVE"
    signingKey: "KORESERVE-SigningKey"

# SMTP Servers
SMTPServers:
  server: ""
  port: ""
  username: ""
  password: ""
  senderEmail: ""
  senderName: ""
